<?xml version="1.0" encoding="UTF-8"?>
<vuf>
  <action>
  // function err(expr,line,?color){
  //   var f = line.file;
  //   var n = line.number;
  //   var c = color == null ? 0xffffff : color;
  //   log(f + ' ' + n + ' ' + expr,c);
  // }
    function mountVehicle(?v){
      var vehicle = v == null ? getLocalPlayer().vehicle : v;
      if (vehicle == null) return;
      trace('mount');
    	var slot = vehicle.equipment.getSlots();
    	while(slot.hasNext()) {
    		var slot1 = slot.next();
        vehicle.equipment.get(slot1).removeEventListener("updated",function(e){updateVehicle(vehicle);});
    		vehicle.equipment.get(slot1).addEventListener("updated",function(e){updateVehicle(vehicle);});
    	}
      updateVehicle(vehicle,false);
    }

    function dismountVehicle(?v){
      var vehicle = v == null ? getLocalPlayer().vehicle : v;
      trace('dismount');
      if (vehicle == null) return;
      var slot = vehicle.equipment.getSlots();
      while(slot.hasNext()) {
        var slot1 = slot.next();
        vehicle.equipment.get(slot1).removeEventListener("updated",function(e){updateVehicle(vehicle);});
      }
    }


    function updateVehicle(?v,?window){
    var vehicle = v == null ? getLocalPlayer().vehicle : v;
    if (vehicle == null) return;
    if (window == null && window != false) window = true;
    trace('updateVehicle');
      // try{throw
        updateHealth(vehicle);
        updateDefense(vehicle);
        updateSpeed(vehicle);
        updateWeight(vehicle);
        updateFuel(vehicle);
        updateHitDamage(vehicle);
        updateCloak(vehicle);
      // }catch(e:Dynamic){
      //   trace('Updaters '+e);
      // }
      var player = getLocalPlayer();
      // trace('Vehicle ' + player.vehicle + 'GUI ' + player.vehicle.gui);
      // trace(player.gui + player.getGUI());
      // try{throw
      vehicle.player.vehicle.gui.init();
      // }catch(e:Dynamic){
      //   trace('GUI '+ e);
      // }

      if (window == true){
      evalXml('&lt;closeWindows modal="true"/>');
      vehicle.manageEquipment();
      }
    }
    // function setStat(stat, ?v){
    //   var vehicle = v == null ? getLocalPlayer().vehicle : v;
    //   if (vehicle == null) return;
    //   var info = vehicle.info;
    //   eval(info.'+stat+' = getStat(stat,vehicle));
    // }

    function getStat(stat, ?v){
      var vehicle = v == null ? getLocalPlayer().vehicle : v;
      if (vehicle == null) return;
      // trace('getStat ' + vehicle.info);
      var info = vehicle.info;
      var equipment = vehicle.equipment;
      var xml = info.xml;
      var stat1 = xml.get(stat);
      var slot = equipment.getSlots();
		    while(slot.hasNext()) {
			      var slot1 = slot.next();
            // trace('GetStat WhileLoop '+slot1);
            // try {throw
            log(equipment.get(slot1).get().info.xml.get(stat),0xff0000);
            log(equipment.getItem(slot1) == null,0x00ff00);

            if (equipment.getItem(slot1) == null){ stat2 = null; log('STAT2 1 ' + stat2,0x0000ff);}
            if (equipment.getItem(slot1) != null){ stat2 = equipment.getItem(slot1).info.xml.get(stat); log('STAT2 1 ' + stat2,0x0000ff);}
              // var stat2 = (equipment.getItem(slot1) == null) ? null : equipment.getItem(slot1).info.xml.get(stat);
            // }catch(error:Dynamic){var stat2 = null;}
            // try{throw
              if (stat2 != null && stat2 != 0){stat1 = Std.parseInt(stat1) + Std.parseInt(stat2);};
              trace(Std.parseInt(stat1) + Std.parseInt(stat2););
              trace(stat2 + ' ' + stat1);
            // }catch(error:Dynamic){trace('StatGetter4 ' + slot1 + ' ' + error);}
		    }
        trace(stat1);
        return stat1;
    }


    function updateHealth(?v){
      var vehicle = v == null ? getLocalPlayer().vehicle : v;
      if (vehicle == null) return;
      trace('updateHealth ' + vehicle.info);
      vehicle.info.health = getStat('health',vehicle);
      if (vehicle.health > vehicle.info.health){vehicle.setHealth(vehicle.info.health);};
    }

    function updateDefense(?v){
      var vehicle = v == null ? getLocalPlayer().vehicle : v;
      if (vehicle == null) return;
      var info = vehicle.info;
      var defense = getStat('defense',vehicle);
      info.front_defense = defense;
      info.back_defense = defense;
    }

    function updateSpeed(?v){
      var vehicle = v == null ? getLocalPlayer().vehicle : v;
      if (vehicle == null) return;
      vehicle.info.speedX = getStat('speed',vehicle);
      vehicle.info.speedY = getStat('speedY',vehicle) == null ? getStat('speed',vehicle) : getStat('speedY',vehicle);
    }


    function updateWeight(?v){
      var vehicle = v == null ? getLocalPlayer().vehicle : v;
      if (vehicle == null) return;
      vehicle.info.max_weight.set(getStat('max_weight',vehicle));
    }

    function updateFuel(?v){
      trace('updateFuel is not enabled yet');
    }
    function updateRepair(?v){
      trace('updateRepair is not enabled yet');
    }
    function updateRefuel(?v){
      trace('updateRefuel is not enabled yet');
    }

    function updateHitDamage(?v){
      var vehicle = v == null ? getLocalPlayer().vehicle : v;
      if (vehicle == null) return;
      vehicle.hitDamage = getStat('hitDamage',vehicle);
    }

    function updateCloak(?v){
      var vehicle = v == null ? getLocalPlayer().vehicle : v;
      if (vehicle == null) return;
      var equipment = vehicle.equipment;
      var slot = equipment.getSlots();
      var hidden = vehicle.info.xml.get('hide');
		   while(slot.hasNext()) {
			  var slot1 = slot.next();
			  var hidden1 = equipment.getItem(slot1) == null ? null : equipment.getItem(slot1).info.xml.get('hide');
        if (hidden1 == 'true'){hidden = true;}
        if (hidden1 == 'false'){hidden = false;}
		   }
       // trace('Hidden ' + hidden);
      if (hidden == true){
        vehicle.setHidden(true);
        if (vehicle.renderer.alpha > 0.5) vehicle.renderer.lerp(new AlphaKeyframe(0.5),10);
      }else
      if (hidden == false){
        vehicle.setHidden(false);
        if (vehicle.renderer.alpha &lt;= 0.5) vehicle.renderer.lerp(new AlphaKeyframe(1),10);
      }else
      if (hidden == null){
        vehicle.setHidden(false);
        if (vehicle.renderer.alpha &lt;= 0.5) vehicle.renderer.lerp(new AlphaKeyframe(1),10);
      }
    }
  </action>
</vuf>
